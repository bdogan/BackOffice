<?php
namespace BackOffice\Controller;

use Cake\Core\Configure;
use Cake\Event\Event;
use Cake\Http\Exception\NotFoundException;
use Cake\ORM\Locator\LocatorAwareTrait;

/**
 * Class CrudController
 *
 * @package BackOffice\Controller
 */
class CrudController extends AppController
{

	use LocatorAwareTrait;

	/**
	 * @var \Cake\Datasource\RepositoryInterface
	 */
	private $model;

	/**
	 * @var array
	 */
	private $activeMenu;

	/**
	 * @var array
	 */
	private $parentMenu;

	/**
	 * @inheritDoc
	 * @param \Cake\Event\Event $event
	 *
	 * @return \Cake\Http\Response|null
	 */
	public function beforeFilter( Event $event ) {
		/** @var \BackOffice\Controller\CrudController $controller */
		$controller = $event->getSubject();

		// Load model
		$this->modelClass  = $controller->getRequest()->getParam('model');
		$this->model = $this->loadModel($this->modelClass);

		// Load active menu
		$activeMenuKey = $controller->getRequest()->getParam('menu');
		$this->activeMenu = $this->BackOffice->getConfig('menu.' . $activeMenuKey, null);
		if ($activeMenuKey && !$this->activeMenu) {
			throw new NotFoundException('Menu {0} not found', $activeMenuKey);
		}

		// Load parent menu
		if ($activeMenuKey) {
			$parentMenuKey = preg_replace('/(\.|\.children\.)\w+$/', '', $activeMenuKey);
			$this->parentMenu = $this->BackOffice->getConfig('menu.' . $parentMenuKey, null);
		}

		// Continue
		return parent::beforeFilter($event);
	}

	/**
	 * Before render
	 *
	 * @param \Cake\Event\Event $event
	 *
	 * @return \Cake\Http\Response|null
	 */
	public function beforeRender( Event $event ) {
		$this->set([
			'activeMenu' => $this->activeMenu,
			'parentMenu' => $this->parentMenu,
			'activeModel' => get_class($this->model)
		]);
		return parent::beforeRender( $event ); // TODO: Change the autogenerated stub
	}

	public function index()
	{

	}

}
