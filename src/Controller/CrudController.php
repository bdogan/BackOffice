<?php
namespace BackOffice\Controller;

use Cake\Core\Configure;
use Cake\Event\Event;
use Cake\Http\Exception\NotFoundException;
use Cake\ORM\Locator\LocatorAwareTrait;
use Cake\Routing\Router;
use Cake\Utility\Hash;

/**
 * Class CrudController
 *
 * @package BackOffice\Controller
 */
class CrudController extends AppController
{

	use LocatorAwareTrait;

	/**
	 * @var \Cake\Datasource\RepositoryInterface
	 */
	private $model;

	/**
	 * @var array
	 */
	private $activeMenu;

	/**
	 * @var array
	 */
	private $parentMenu;

	/**
	 * @return array
	 */
	public function implementedEvents() {
		return array_merge(parent::implementedEvents(), [
			'View.beforeRender' => 'beforeViewRender'
		]);
	}

	/**
	 * @inheritDoc
	 * @param \Cake\Event\Event $event
	 *
	 * @return \Cake\Http\Response|null
	 */
	public function beforeFilter( Event $event ) {

		// Load parent active menu
		$this->parentMenu = $this->BackOffice->getActiveMenu() ?: [];
		if (!$this->parentMenu) {
			throw new NotFoundException(__('ParentMenu not found'));
		}

		// Load active menu
		$this->activeMenu = $this->BackOffice->getActiveMenu(Hash::get($this->parentMenu, 'children', []));
		if (!$this->activeMenu) {
			throw new NotFoundException(__('ActiveMenu not found'));
		}

		// Load model
		$this->modelClass = $this->getRequest()->getParam('modelClass');
		$this->model = $this->loadModel($this->modelClass);

		// Continue
		return parent::beforeFilter($event);
	}

	/**
	 * Before render
	 *
	 * @param \Cake\Event\Event $event
	 *
	 * @return \Cake\Http\Response|null
	 */
	public function beforeRender( Event $event ) {
		$this->set([
			'activeMenu' => $this->activeMenu,
			'parentMenu' => $this->parentMenu,
			'modelClass' => $this->getRequest()->getParam('modelClass'),
			'entity' => $this->model->getAlias()
		]);
		return parent::beforeRender( $event ); // TODO: Change the autogenerated stub
	}

	/**
	 * Before view render
	 *
	 * @param \Cake\Event\Event $event
	 */
	public function beforeViewRender(Event $event)
	{
		/** @var \BackOffice\View\AppView $appView */
		$appView = $event->getSubject();

		// Set breadcrumb
		if ($this->parentMenu) {
			$appView->Page->addCrumb( $this->parentMenu['title'], $this->parentMenu['action'] );
		}
		$appView->Page->addCrumb( $this->activeMenu['title'], $this->activeMenu['action'] );
	}

	public function index()
	{

	}

	public function create()
	{

	}

}
